*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  block-size: 100%;
}

.page {
  display: flex;
  align-items: center;
  margin: auto;
  color: #fff;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-size: 18px;
  background-color: #1b1919;
  inline-size: 1200px;
  block-size: 100%;
}

h1,
h2,
h3,
h4,
p,
ul,
ol,
li,
blockquote,
fieldset {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

/* Шаг 1. Лейаут */
/* ================================================= */

/* Расположить блок .content посередине .page. */
/* Расположить элементы .content в строку, прижав к низу вертикальной оси. */
/* Задать горизонтальные размеры .content и отступы между его элементами. */
.content {
  display: flex;
  align-items: flex-end;
  gap: 30px;
  max-width: 1140px;
  margin: auto;
}

/* Расположить элементы .search-form в строку и пропорционально распределить между ними свободное пространство, прижать их к началу контейнера. */
.search-form {
  display: flex;
  flex-direction: row;
  justify-content: space-between; 
  align-items: flex-start;
}

/* Установить вертикальный размер для .content__list и добавить скролл при переполнении. */
.content__list {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 26px; /* убрано 4 пикселя для компенсации margin .content__card-link */
  height: 298px;
  overflow-x: hidden;
  overflow-y: auto;
}

/* Растянуть .content__details во всю доступную ширину и высоту контейнера и добавить отступы между заголовком и зоной с карточками. */
.content__details {
  display: flex;
  flex-direction: column;
  gap: 26px;
  width: 100%;
  height: 100%;
}

/* Шаг 2. Уточнение размеров */
/* ================================================= */

/* Задать размеры контейнеру .result__video-container и добавить отступ снизу. */
.result__video-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 711px;
  height: 386px;
  margin-bottom: 16px;
}

/* Замостить видео в этот контейнер так, чтобы оно занимало всю ширину и высоту и не выходило за пределы. */
.result__video {
  display: flex;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

/* Создать вертикальные отступы между элементами .content__list-item (у всех, кроме последнего). */
.content__list-item {
  padding: 2px;
}

/* Расположить элементы внутри контейнера .content__video-card в строку, прижав к началу контейнера по дополнительной оси. */
.content__video-card {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

/* Задать размеры .content__video-card-thumbnail и замостить в них изображение. */
.content__video-card-thumbnail {
  flex-shrink: 0;
  width: 194px;
  height: 103px;
  object-fit: cover;
  object-position: center;
}



/* Шаг 3. Позиционирование прелоадеров */
/* ================================================= */
/* Прелоадеры должны появляться в двух местах: */
/* поверх .result__video-container; */
/* поверх .content__list. */

/* Шаг 4. Стили текстов */
/* ================================================= */

/* Оформить текст элементов .search-form__fieldset-title. Обратите внимание на вес шрифта, размер, отступы. */
.search-form__fieldset {
  display: inline-flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 5px;
  border: none;
}

.search-form__fieldset-title {
  inset: 0;
  color: #FFF;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-weight: 400;
  font-size: 18px;
  font-style: normal;
  line-height: normal;
}

/* Оформить элемент .title и вложенный в него .content__accent. */
.title {
  color: #FFF;
  font-family: 'Oswald', sans-serif;
  font-weight: 700;
  font-size: 75px;
  font-style: normal;
  line-height: 94%;
  text-transform: uppercase;
}

.content__accent {
  color: #545050;
  font-family: 'Oswald', sans-serif;
  font-weight: 700;
  font-size: 75px;
  font-style: normal;
  line-height: 94%; /* 70.5px */
  text-transform: uppercase;
}


/* Убрать дефолтное подчёркивание и заменить цвет текста у ссылки .content__card-link. */
.content__card-link {
  color: #fff;
  text-decoration: none;
}

/* Сделать так, чтобы .content__video-card-description-container занимал всё доступное пространство, не занятое картинкой. */
.content__video-card-description-container {
  display: flex;
  flex-direction: column;
  gap: 6px;
  padding: 2px;
  width: 100%;
}

/* Оформить текст .content__video-card-title. */
.content__video-card-title {
  font-family: 'Oswald', sans-serif;
  font-weight: 700;
  font-size: 30px;
  line-height: 100%; /* 30px */
  text-transform: uppercase;
  word-break: break-all;
}

/* И присмотреться к высоте линии в .content__video-card-description. */
.content__video-card-description {
  display: flex;
  align-items: flex-start;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-weight: 400;
  font-size: 18px;
  line-height: 16.2px; /* 90% */
}

/* Шаг 5. Элементы формы и кнопки */
/* ================================================= */

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  inline-size: 1px;
  block-size: 1px;
  clip-path: inset(50%);
  white-space: nowrap;
}

/* Поля формы */

/* Сбросьте border у fieldset. */


/* Вам нужно расставить элементы внутри .search-form__label в линию. И при этом подогнать ширину контейнера под размер внутренних элементов. Для этого пригодится правило width: fit-content;. */
.search-form__label {
  display: inline-flex;
  align-items: center;
  gap: 5px;
}

/* При вёрстке текстового поля обращайте внимание на управление размерами, границей, цветом текста, семейством шрифта, размером шрифта, фоном. Некоторые из этих свойств не наследуются. */
/* Текстовому полю нужно задать свойство appearance: none;. Так в разных браузерах будут нужные вам стили. Это трюк. */
.search-form__textfield {
  display: flex;
  align-items: center;
  gap: 10px;
  width: 225px;
  height: 27px;
  border: none;
  border-top: 1px solid #FFF;
  border-right: 1px solid transparent;
  border-bottom: 1px solid #FFF;
  border-left: 1px solid transparent;
  padding: 0;
  outline: none;
  color: rgba(255, 255, 255, 0.70);
  font-family: 'Fira Sans Condensed', sans-serif;
  font-weight: 400;
  font-size: 18px;
  line-height: normal;
  background-color: transparent;
  appearance: none;
}

.search-form__textfield:active {
  border-right: 1px solid #fff;
  border-left: 1px solid #fff;
}

.search-form__textfield:has(:focus-visible) {
  outline: 1px solid #FFF;
  outline-offset: 2px;
}

/* Обёртка .search-form__checkbox-list создана специально для того, чтобы выстроить чекбоксы в линию. */
.search-form__checkbox-list {
  display: flex;
  gap: 15px;
  width: 212px;
}

/* Когда будете рисовать .search-form__pseudo-checkbox, учитывайте, что в нём появится элемент, который должен оказаться точно по центру. Если присмотритесь к макету, заметите, что внутренний квадрат включённого чекбокса чуть меньше самого чекбокса. Это мы сверстаем отдельно следующим шагом. */
.search-form__pseudo-checkbox {
  display: inline-flex;
  align-items: center;
  gap: 5px;
  width: 19px;
  height: 19px;
  border: 1px solid #FFF;
}

/* Кнопки */
.button {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;

  border: 1px solid #FFF;
  color: #FFF;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: normal;
  text-align: center;
  background-color: transparent;
  cursor: pointer;
}

.button:focus {
  outline: none;
}

.button:active {
  background: #545050;
}

.search-form__submit-button {
  width: 194px;
  height: 34px;
  margin-top: 20px;
}

.more-button {
  width: 399px;
  height: 34px;
}

/* Шаг 6. Состояния элементов формы и кнопок */

/* Текстовое поле ввода */
/* У этого элемента нужно сбросить обводку в состоянии фокуса и вместо этого делать границу у лейбла, который его окружает. Лейбл должен получать границу только когда у поля находится в состоянии focus-visible, но не focus. Чтобы такое реализовать, можно применить хитрую комбинацию псевдоклассов — :has(:focus-visible). */
.search-form__label:has(:focus-visible) {
  outline: 1px solid #FFF;
  outline-offset: 2px;
} 

/* Активный чекбокс */
/* На макете при нажатии чекбокса внутри появляется квадрат. Он чуть меньше чекбокса. Мы предлагаем вам реализовать его псевдоэлементом для .search-form__pseudo-checkbox. У вас получится непростая комбинация селекторов «псевдоэлемент для первого соседа зажатого чекбокса». Подумайте, как такое описать. */
.search-form__pseudo-checkbox {
  cursor: pointer;
}

input[type="checkbox"]:checked + span::after {
  content: '';
  width: 15px;
  height: 15px;
  margin: 0 auto;
  background-color: #FFF;
}

.search-form__label:hover,
.search-form__submit-button:hover,
.more-button:hover {
  text-decoration: underline;
}

.search-form__label:has(input[type="text"]):hover  {
  text-decoration: none;
}

.search-form__submit-button:focus-visible,
.more-button:focus-visible  {
  outline: 1px solid #fff;
  outline-offset: 2px;
}

/* Шаг 7. Состояния карточек */

/* Текущая карточка
Первая карточка должна быть активной, а при переключении активная карточка должна выделяться. Это поведение уже написано на JavaScript. Но в CSS должны оказаться соответствующие стили для селектора .content__card-link_current. Есть одна особенность: чтобы фон применился, ссылку .content__card-link нужно сделать блочным элементом. */
.content__card-link {
  display: block;
  margin: 2px;
}

.content__card-link_current {
  background: #545050;
}

/* Другие состояния карточки
У каждой карточки доступны такие состояния: :hover, :active и :focus-visible. Чтобы состояние :focus-visible работало корректно, придётся сбросить обводку на состоянии :focus. Все стили вы легко скопируете из макета.
Есть только одна хитрость. Чтобы обводка в состоянии :focus-visible была видна целиком, задайте небольшой margin элементу .content__card-link. Хватит двух пикселей со всех сторон. */

.content__video-card:focus,
.content__card-link:focus {
  outline: none;
}

.content__video-card:hover {
  text-decoration: underline;
  text-decoration-thickness: 1px;
  text-underline-position: under;
}

.content__video-card:active {
  background: #545050;
}

.content__video-card:focus-visible,
.content__card-link:focus-visible {
  outline: 1px solid #fff;
  outline-offset: 2px;
}
